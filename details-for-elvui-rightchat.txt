^1^T^Shide_in_combat_type^N1^Sbackdrop_texture^SDetails~`Ground^Scolor^T^N1^N1^N2^N1^N3^N1^N4^N1^t^Smenu_anchor^T^N1^N16^N2^N2^Sside^N2^t^Sbg_r^N0.3294^Shide_out_of_combat^b^Sfollowing^T^Senabled^b^Sbar_color^T^N1^N1^N2^N1^N3^N1^t^Stext_color^T^N1^N1^N2^N1^N3^N1^t^t^Scolor_buttons^T^N1^N1^N2^N1^N3^N1^N4^N1^t^Sswitch_healer^b^Sskin_custom^S^Stotal_bar^T^Senabled^b^Sonly_in_group^B^Sicon^SInterface\ICONS\INV_Sigil_Thorim^Scolor^T^N1^N1^N2^N1^N3^N1^t^t^Sbars_grow_direction^N1^Sshow_sidebars^B^Smenu_icons_size^F8106479114518527^f-53^Stooltip^T^Sn_abilities^N3^Sn_enemies^N3^t^Slibwindow^T^Sy^F4503614659756032^f-49^Sx^N-254^Spoint^SBOTTOMRIGHT^Sscale^N1^t^Sskin^SElvUI~`Frame~`Style^Sswitch_all_roles_in_combat^b^Sswitch_tank_in_combat^b^Sname^SDetails~`in~`ElvUI~`right~`chat^Sattribute_text^T^Sshow_timer^T^N1^B^N2^B^N3^B^t^Sshadow^B^Sside^N1^Stext_color^T^N1^N1^N2^N1^N3^N1^N4^N0.7^t^Scustom_text^S{name}^Stext_face^SFORCED~`SQUARE^Sanchor^T^N1^N-19^N2^N5^t^Senabled^B^Senable_custom_text^b^Stext_size^N12^t^Sinstance_button_anchor^T^N1^N-27^N2^N1^t^Smenu_alpha^T^Senabled^b^Sonenter^N1^Siconstoo^B^Signorebars^b^Sonleave^N1^t^Smenu_anchor_down^T^N1^N16^N2^N-2^t^Sstatusbar_info^T^Salpha^N1^Soverlay^T^N1^N1^N2^N1^N3^N1^t^t^Sbars_inverted^b^Sstrata^SLOW^Smicro_displays_locked^B^Smicro_displays_side^N2^Signore_mass_showhide^b^Shide_in_combat_alpha^N0^Splugins_grow_direction^N2^Smenu_icons^T^N1^B^N2^B^N3^B^N4^B^N5^B^N6^b^Sspace^N-2^Sshadow^b^t^Sdesaturated_menu^b^Sauto_hide_menu^T^Sleft^b^Sright^b^t^Sswitch_damager^b^Srow_show_animation^T^Sanim^SFade^Soptions^T^t^t^Sswitch_all_roles_after_wipe^b^Sswitch_tank^b^Sbg_alpha^N0.51^Shide_icon^B^Sbars_sort_direction^N1^Stoolbar_icon_file^SInterface\AddOns\Details\images\toolbar_icons^Sauto_current^B^Stoolbar_side^N1^Sbg_g^N0.3294^Sswitch_healer_in_combat^b^Shide_in_combat^b^Sshow_statusbar^b^Sgrab_on_top^b^Sswitch_damager_in_combat^b^Swallpaper^T^Senabled^B^Swidth^F4679522561556476^f-44^Stexcoord^T^N1^F6917529302518984^f-57^N2^F5368290961984065^f-54^N3^F5683542592302613^f-53^N4^F6809442499145237^f-53^t^Soverlay^T^N1^F9007179390517245^f-53^N2^F9007179390517245^f-53^N3^F9007179390517245^f-53^N4^F7205743405039619^f-53^t^Sanchor^Sall^Sheight^F7951667555205122^f-45^Salpha^F7205760048037890^f-53^Stexture^SInterface\AddOns\Details\images\skins\elvui^t^Sstretch_button_side^N1^Swindow_scale^N1^Srow_info^T^StextR_outline^b^Sspec_file^SInterface\AddOns\Details\images\spec_icons_normal^StextL_outline^b^Stexture_highlight^SInterface\FriendsFrame\UI-FriendsList-Highlight^StextR_show_data^T^N1^B^N2^B^N3^B^t^StextL_enable_custom_text^b^Sfixed_text_color^T^N1^N1^N2^N1^N3^N1^t^Sspace^T^Sright^N-2^Sleft^N1^Sbetween^N1^t^Stexture_background_class_color^b^Sstart_after_icon^B^Sfont_face_file^SFonts\FRIZQT___CYR.TTF^Sbackdrop^T^Senabled^b^Stexture^SDetails~`BarBorder~`2^Scolor^T^N1^N0^N2^N0^N3^N0^N4^N1^t^Ssize^N4^t^Sfont_size^N11^Sheight^N18^Stexture_file^SInterface\AddOns\Details\images\bar_skyline^StextR_bracket^S[^Sicon_file^SInterface\AddOns\Details\images\classes_small^Sicon_grayscale^b^StextL_custom_text^S{data1}.~`{data3}{data2}^Suse_spec_icons^B^Stexture_custom^S^Spercent_type^N1^Sfixed_texture_color^T^N1^N0^N2^N0^N3^N0^t^StextL_show_number^B^StextL_outline_small_color^T^N1^N0^N2^N0^N3^N0^N4^N1^t^StextR_enable_custom_text^b^StextR_custom_text^S{data1}~`({data2},~`{data3}%)^Stexture^SSkyline^Stexture_custom_file^SInterface\^StextR_outline_small^B^Sfixed_texture_background_color^T^N1^N0^N2^N0^N3^N0^N4^F6118340900683770^f-54^t^Stexture_background^SDGround^Salpha^N0.8^StextR_class_colors^b^StextR_outline_small_color^T^N1^N0^N2^N0^N3^N0^N4^N1^t^Sno_icon^b^StextL_class_colors^b^Stexture_background_file^SInterface\AddOns\Details\images\bar_background^Sfont_face^SFriz~`Quadrata~`TT^Stexture_class_colors^B^StextL_outline_small^B^Sfast_ps_update^b^StextR_separator^S|^Smodels^T^Supper_model^SSpells\AcidBreath_SuperGreen.M2^Slower_model^SWorld\EXPANSION02\DOODADS\Coldarra\COLDARRALOCUS.m2^Supper_alpha^N0.5^Slower_enabled^b^Slower_alpha^N0.1^Supper_enabled^b^t^t^Sversion^N3^Sbg_b^N0.3294^t^^